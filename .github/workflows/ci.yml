name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

env:
  GO_VERSION: '1.21'
  GOOS: linux
  GOARCH: amd64

jobs:
  test:
    name: Test and Validate
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        go-version: [1.21, 1.22]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Go ${{ matrix.go-version }}
      uses: actions/setup-go@v4
      with:
        go-version: ${{ matrix.go-version }}
        
    - name: Cache Go modules
      uses: actions/cache@v4
      with:
        path: |
          ~/.cache/go-build
          ~/go/pkg/mod
        key: ${{ runner.os }}-go-${{ matrix.go-version }}-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-${{ matrix.go-version }}-
          
    - name: Install dependencies
      run: make deps
      
    - name: Run tests
      run: make test
      
    - name: Run benchmarks
      run: make benchmark
      
    - name: Check formatting
      run: make fmt-check
      
    - name: Run linter
      run: make lint
      
    - name: Security scan
      run: ./scripts/security-scan.sh
      continue-on-error: true
      
    - name: Build package
      run: make build
      
    - name: Upload coverage reports
      uses: codecov/codecov-action@v4
      with:
        file: ./coverage.out
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: false

  build:
    name: Build and Package
    runs-on: ubuntu-latest
    needs: test
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: ${{ env.GO_VERSION }}
        
    - name: Build examples
      run: make build-examples
      
    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: workerpool-examples
        path: |
          examples/*/workerpool
        retention-days: 7

  release:
    name: Release
    runs-on: ubuntu-latest
    needs: [test, build]
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: ${{ env.GO_VERSION }}
        
    - name: Build and test
      run: make ci
      
    - name: Create Release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: v${{ github.run_number }}
        release_name: Release v${{ github.run_number }}
        body: |
          Automated release from CI pipeline
          
          ## Changes
          - Automated build and test validation
          - All tests passing
          - Code quality checks passed
          
          ## Artifacts
          - Worker pool examples built successfully
          - Test coverage reports generated
          - Security scan completed
        draft: false
        prerelease: false
